package sbnz.integracija;

import sbnz.integracija.example.model.User;
import sbnz.integracija.example.model.Reservation;
import org.apache.commons.lang.time.DateUtils
import java.util.*

query jePreporucen(String x, String y )
  Recommendation( x, y; )
  or 	
  ( Recommendation( z, y; ) and jePreporucenOd( x, z; ) )
end

global String first;
rule "proba"
	agenda-group "proba"
	lock-on-active true
	salience 100
	when 
		$rezervacija : Reservation($korisnikId : getUserName(), status == "ZAVRSEN")
        jePreporucen(first,$korisnikId;)
	then
		System.out.println("Nasao" + first + $korisnikId);
		modify ($rezervacija) { setPenaltyPercentage(-1); }	
		drools.halt();	
end

rule "Popust od 90% za korisnika cije su preporuke donele preko 200 zarade"
	agenda-group "popusti"
	salience 100
	when 
		$rezervacija : Reservation($korisnikId : getUserName(), status == "REZERVISAN")
        $rezervacije : List() from collect (
        Reservation(
        status == "ZAVRSEN",penaltyPercentage == -1)
        )
        eval ($rezervacije.size() >= 1)
        Number(intValue >= 200) from accumulate(
			 $s: Reservation (
			 $p : price
			 ) from $rezervacije,
	         sum($p)
		)        
	then
		System.out.println("Korisnik " + $korisnikId + " je ostvario popust od 90%");
		modify ($rezervacija) { setDiscount(Math.min($rezervacija.getDiscount()+90, 100)); }		
		
end

rule "Popust od 40% za korisnika koji zeli da rentira automobil koji je rentirao u prethodnih mesec dana"
	agenda-group "popusti"
	salience 10
	when 
		$rezervacija : Reservation($korisnikId : user, status == "REZERVISAN", $automobilId : car)
        $rezervacije : List() from collect ( Reservation(
        car == $automobilId,
        user == $korisnikId,
        status == "ZAVRSEN",
        $pomerenDatum: DateUtils.addDays(new Date(), -30),
        eval($pomerenDatum.before(fromDate))       
        ))
        eval ( $rezervacije.size() >= 1 )
	then
		System.out.println("Korisnik " + $korisnikId + " je ostvario popust od 40%");
		modify ($rezervacija) { setDiscount(Math.min($rezervacija.getDiscount()+40, 100)); }		
		
		
end

rule "Popust od 30% ukoliko je u proteklih mesec dana rentirao automobil"
	agenda-group "popusti"
	salience 20
	when 
		$rezervacija : Reservation($korisnikId : user, status == "REZERVISAN")
        $rezervacije : List() from collect ( Reservation(
        user == $korisnikId,
        status == "ZAVRSEN",
        $pomerenDatum: DateUtils.addDays(new Date(), -30),
        eval($pomerenDatum.before(fromDate))
        ))
        eval ( $rezervacije.size() >= 1 )
	then
		System.out.println("Korisnik " + $korisnikId + " je ostvario popust od 30%");
		modify ($rezervacija) { setDiscount(Math.min($rezervacija.getDiscount()+30, 100)); }		
		
		
end

rule "Popust od 20% ukoliko korisnik zakaze rentiranje mesec dana ranije"
	agenda-group "popusti"
	salience 30
	when 
		$rezervacija: Reservation($korisnikId : user, discount == 0, status == "REZERVISAN",
		$pomerenDatum: DateUtils.addDays(new Date(), 30),
        eval($pomerenDatum.before(fromDate)))
	then
		System.out.println("Korisnik " + $korisnikId + " je ostvario popust od 20%");
		modify ($rezervacija) { setDiscount(Math.min($rezervacija.getDiscount()+20, 100)); }		
		
end

rule "Ako korisnik zeli da produzi rentiranje dobija dodatni popust od 10%"
	agenda-group "popusti"
	salience 0
	when 
		$rezervacija : Reservation($korisnikId : user, status == "PRODUZAVANJE")
	then
		System.out.println("Korisnik " + $korisnikId + " je ostvario popust od 10%");
		modify ($rezervacija) { setDiscount(Math.min($rezervacija.getDiscount()+10, 100)); }
		
end